version: "3.8"

services:
  mysql:
    image: mysql:latest
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: Adii@9389
      MYSQL_DATABASE: fnpblog
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - fnpnet
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis/redis-stack:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
      - "8001:8001" # RedisInsight
    networks:
      - fnpnet
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./fnp_blog_backend
      dockerfile: Dockerfile
    container_name: fnpblog-backend
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8080:8080"
    networks:
      - fnpnet
    restart: unless-stopped

  frontend:
    build:
      context: ./fnpblog-frontend
      dockerfile: Dockerfile
    container_name: fnpblog-frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - fnpnet
    restart: unless-stopped

volumes:
  mysql-data:

networks:
  fnpnet:
    driver: bridge
